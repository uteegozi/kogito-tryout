spec:
  template:
    spec:
      containers:
        - name: kogito-travel-agency-travels-jvm
          env:
            - name: KOGITO_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: kogito-app-configs
                  key: kogito.service.url.travels
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: kogito-configs
                  key: kafka.bootstrap.servers
            - name: KOGITO_DATAINDEX_HTTP_URL
              valueFrom:
                configMapKeyRef:
                  name: kogito-configs
                  key: kogito.dataindex.httpurl
            - name: KOGITO_DATAINDEX_WS_URL
              valueFrom:
                configMapKeyRef:
                  name: kogito-configs
                  key: kogito.dataindex.wsurl
            - name: KOGITO_PERSISTENCE_TYPE
              value: jdbc
            - name: QUARKUS_DATASOURCE_DB-KIND
              value: postgresql
            - name: QUARKUS_DATASOURCE_JDBC_URL
              valueFrom:
                configMapKeyRef:
                  name: kogito-configs
                  key: postgres.service.jdbc.url
            - name: QUARKUS_DATASOURCE_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: kogito-configs
                  key: postgres.service.username
            - name: QUARKUS_DATASOURCE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: kogito-configs
                  key: postgres.service.password
          ports:
            - containerPort: 8080
              protocol: TCP